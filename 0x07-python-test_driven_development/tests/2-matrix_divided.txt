>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1, 2, 3.5], [4, 5, 6]], 3)
[[0.33, 0.67, 1.17], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1, 2, "3.5"], [4, 5, 6]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, "3.5"], [4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2, "3.5"], [4, 5, 6]], "0")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3.5], "lopo"], 4)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([], 4)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(None, 4)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
